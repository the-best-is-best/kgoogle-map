[versions]
accompanistPermissions = "0.36.0"
klocation = "1.0.6"
kotlin = "2.1.0"
compose = "1.7.3"
agp = "8.7.0"
androidx-activityCompose = "1.9.3"
androidx-uiTest = "1.7.5"
kotlinBom = "2.1.0"
lifecycleViewmodelCompose = "2.8.2"
maven-publish = "0.30.0"
googleMaps = "6.2.1"
mapsSecret = "2.0.1"
mapPlaces = "4.1.0"
permissions = "0.18.1"
playServicesLocation = "21.3.0"
googleMapUtils = "3.9.0"
ktor = "3.0.0"
slf4jSimple = "2.0.16"
kotlinx-serialization = "1.7.3"
appcompat = "1.7.0"

[libraries]

accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-uiTest" }
androidx-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-uiTest" }
google-maps = { module = "com.google.maps.android:maps-compose", version.ref = "googleMaps" }
google-maps-utils = {module = "com.google.maps.android:android-maps-utils" , version.ref= "googleMapUtils"}
klocation = { module = "io.github.the-best-is-best:klocation", version.ref = "klocation" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlinBom" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleViewmodelCompose" }
map-places = { module = "com.google.android.libraries.places:places", version.ref = "mapPlaces" }
permissions = { module = "dev.icerock.moko:permissions", version.ref = "permissions" }
permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "permissions" }
permissions-test = { module = "dev.icerock.moko:permissions-test", version.ref = "permissions" }
play-services-location = { group = "com.google.android.gms", name = "play-services-location", version.ref = "playServicesLocation" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4jSimple" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }


[plugins]
native-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
map-secret = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "mapsSecret" }
maven-publish = {id = "com.vanniktech.maven.publish" , version.ref = "maven-publish"}